function create_VIM_TESTS(e,o){function t(e,o,t,n){r(e,function(){i(o,t,n)})}function i(e,t,i){o.test(e,t,i)}function r(e,t){o.registerTest(e,t)}var n=(VIM_GENERIC,e.environment),s=o.setup,a=o.interpretSequence,c=o.interpretOneCommand,d=o.shouldBe,l=o.assertThat;r("Visual mode: yank and paste a word",function(){s("Hello, [t]his is really nice."),a("vw"),d("Hello, this [i]s really nice."),a("y"),d("Hello, [t]his is really nice."),a("2w"),d("Hello, this is [r]eally nice."),a("p"),d("Hello, this is rthis [i]eally nice")}),r("Visual mode: yank and paste more than a line",function(){s("He[l]lo, this is|really nice."),a("vj"),d("Hello, this is|re[a]lly nice."),a("y"),d("He[l]lo, this is|really nice."),a("p"),d("He[l]llo, this is|realo, this is|really nice.")}),t("Visual mode: delete word","Hello, [t]his is really nice.","vwd","Hello, [s] really nice."),t("Visual mode: delete two words","Hello, [t]his is really nice.","vwwd","Hello, [e]ally nice."),t("Visual mode: find until next 'n' and delete","Hello, [t]his is really nice.","vfnd","Hello, [n]ice."),r("Visual block mode: add prefix for lines",function(){s("Zero|[F]irst|Second|Third|Fourth"),c("ctrl-v"),a("jj"),c("I"),a(["-","Space"]),c("Esc"),d("Zero|[-] First|- Second|- Third|Fourth")}),r("Visual block mode: advanced movement is allowed",function(){s("Zero|First|Second|[T]hird|Fourth"),c("ctrl-v"),a("bjj"),c("I"),a(["-","Space"]),c("Esc"),d("Zero|First|[-] Second|- Third|Fourth")}),r("Visual block mode: add text to the end of lines",function(){s("Zero|Firs[t]|SecondLongIsThis|Third|Fourth"),c("ctrl-v"),a("jj"),c("$"),a("?!"),c("Esc"),d("Zero|[F]irst?!|- SecondLongIsThis?!|- Third?!|Fourth?!")}),r("Visual block mode: add text after block",function(){s("Zero|12[3]|1|12345|Fourth"),c("ctrl-v"),a("jj"),c("A"),a("?!"),c("Esc"),d("Zero|[1]23?!|- 1  ?!|- 123?!45|Fourth?!")}),r("Insert 3 times given text",function(){s("Fooba[r]?"),a(["3","i","Hey!"]),c("Esc"),d("FoobaHey!Hey!Hey![r]?")}),r("Repeating insert goes back to command mode",function(){s("a[b]c"),a(["3","i","d"]),c("Esc"),l("Is in command mode",n.isCommandMode())}),r("Repeat last find with ;",function(){s("[T]his is a nice sentence."),a("fs"),d("Thi[s] is a nice sentence."),c(";"),d("This i[s] a nice sentence."),c(";"),d("This is a nice [s]entence.")}),r("Repeat last find in opposite direction",function(){s("[T]his is a nice sentence."),a("fsfsfs"),d("This is a nice [s]entence."),c(","),d("This i[s] a nice sentence."),c(","),d("Thi[s] is a nice sentence.")}),r("Repeat last backward find",function(){s("This is a nice sentenc[e]."),a("Fs"),d("This is a nice [s]entence."),c(";"),d("This i[s] a nice sentence."),c(";"),d("Thi[s] is a nice sentence.")}),r("Repeat last backward find in opposite direction",function(){s("This [i]s a nice sentence."),a("Fs"),d("Thi[s] is a nice sentence."),c(","),d("This i[s] a nice sentence."),c(","),d("This is a nice [s]entence.")}),r("Search for pattern, case: simple text",function(){s("h[e]llo. what is up. what is?"),c("/"),a("what"),c("Enter"),d("hello. [w]hat is up. what is?"),c("n"),d("hello. what is up. [w]hat is?"),c("N"),d("hello. [w]hat is up. what is?")}),r("Search for pattern, two words (tests space)",function(){s("h[e]llo. what is up. what is?"),c("/"),a("what is"),c("Enter"),d("hello. [w]hat is up. what is?"),c("n"),d("hello. what is up. [w]hat is?"),c("N"),d("hello. [w]hat is up. what is?")}),t("Goto previous word's last character","This is not n[i]ce","ge","This is no[t] nice"),t("Go to start of current word if no previous word","Th[i]s is","ge","[T]his is"),t("Goto previous word's last character, start from first character","This is not [n]ice","ge","This is no[t] nice"),t("Goto next )","He[r]e|is ), right.","])","Here|is [)], right."),t("Goto previous (","Here is a(b,|ri[g]ht.","[(","Here is a[(]b,|right."),t("Goto next }","He[r]e is }, right.","]}","Here is [}], right."),t("Goto first non-blank character in current line and set to insert mode","  Hey, this is c[o]ol.","I","  [H]ey, this is cool."),t("Line starts with non-blank character","Hey, nic[e]","I","[H]ey, nice"),t("If there is not a non-blank character in the line, go to the end"," [ ]     ","I","      [ ]"),r("I goes to insert mode",function(){s("Foo[b]ar"),c("I"),l("In insert mode",n.isInsertMode())}),r("mark position with ma, and go to it with `a",function(){s("Hi the[r]e. This is great."),a("ma"),c("$"),a("mb"),d("Hi there. This is great[.]"),a("`a"),d("Hi the[r]e. This is great."),a("`b"),d("Hi there. This is great[.]"),a("db0"),d("[H]i there. This is ."),a("`b"),d("Hi there. This is [.]")}),r("mark and goto start of that line with 'a",function(){s("First|Hi the[r]e.|This is great."),a("ma"),a("gg"),d("[F]irst|Hi there.|This is great."),a("'a"),d("First|[H]i there.|This is great.")}),t("Clear current line","First line|Current [l]ine|Third line","S","First line|[ ]|Third line"),t("Clear empty text","[ ]","S","[ ]"),r("S goes to insert mode",function(){s("Setu[p]."),c("S"),l("In insert mode",n.isInsertMode())}),t("Goto next word, ignore punctuation","Hel[l]o, what's up.","W","Hello, [w]hat's up."),t("Goto previous word, ignore punctuation","Hello, [w]hat's up.","B","Hell[o], what's up."),t("Goto end of word, ignore punctuation","He[l]lo, nice.","E","Hello[,] nice."),t("Goto first non-blank character in current line","  Hey, this is [c]ool.","^","  [H]ey, this is cool."),t("Remove the only word, cursor at the beginning","[a]bc","dw","[ ]"),t("Remove the only word, cursor at second char","a[b]c","dw","[a]"),r("Enter moves rest of the line to the next line, cursor at space between two words",function(){s("F[ ]oobar hello"),n.setInsertMode(),n.interpretOneCommand("Enter"),d("F|[ ]oobar hello")}),r("Enter moves rest of the line to the next line, cursor in middle of text",function(){s("Foo[b]ar"),n.setInsertMode(),n.interpretOneCommand("Enter"),d("Foo|[b]ar")}),t("Go to corresponding (, skipping one","Foo ( bar ( | zet ) [)]","%","Foo [(] bar ( | zet ) )"),t("Go to corresponding ), skipping one )","Foo bar [(] ( ) )","%","Foo bar ( ( ) [)]"),t("Go to corresponding )","Foo bar [(] )","%","Foo bar ( [)]"),t("Go to corresponding {","Foo bar { ( ) [}]","%","Foo bar [{] ( ) }"),t("Go to corresponding }","Foo bar [{] ( ) }","%","Foo bar { ( ) [}]"),r("Undo restores the state before last command",function(){var e="[a]bc";s(e),a("de"),d("[ ]"),a("u"),d(e)}),r("Macro recording and replaying",function(){s("[f]oobar taaperi lamppu sumppi"),a("q"),a("a"),l("is recording",n.isRecordingMacro()),a("w"),a("q"),l("is not recording macro",!n.isRecordingMacro()),l("is in command mode",n.isCommandMode()),a("0"),a("@a@a@a"),l("is in command mode",n.isCommandMode()),d("foobar taaperi lamppu [s]umppi")}),t("Trying to delete downwards more lines than there is won't break things","first|s[e]cond|third","d9j","[f]irst"),t("Go to line number 3","F[i]rst|second|third|fourth","3G","First|second|[t]hird|fourth"),t("If line number too large, go to last line","[F]irst|second|third|fourth","22G","First|second|third|[f]ourth"),t("Repeat command 3 times","Fo[o] bar cue dumdi right","w3.","Foo bar cue dumdi [r]ight"),t("Repeat command: w","Fo[o] bar cue right","w..","Foo bar cue [r]ight"),t("Repeat delete word","Fo[o] bar cue right","de.","Fo[ ]right"),t("Trying to delete upwards more lines than there is won't break things","first|second|th[i]rd|fourth","d9k","[f]ourth"),t("Trying to delete downwards all existing lines","fi[r]st|second|third","d9j","[ ]"),t("Trying to delete upwards all existing lines","first|second|t[h]ird","d9k","[ ]"),t("Delete starting from cursor, maximum of 2 words, to the right","one t[w]o three four","d2w","one t[f]our"),t("Delete three lines upwards","first|second|third|fo[u]rth|fifth","d2k","first|[f]ifth"),t("Delete two lines upwards","first|second|th[i]rd|fourth","dk","first|[f]ourth"),t("Delete two lines downwards","fir[s]t|second|third|fourth","dj","[t]hird|fourth"),t("Delete three lines downwards","fir[s]t|second|third|fourth|fifth","d2j","[f]ourth|fifth"),t("Find the 3rd occurrence of a","Fo[o] bar har nar","3fa","Foo bar har n[a]r"),t("A jump of a couple of words","H[e]llo this is fun, yea?","3w","Hello this is [f]un, yea?"),r("Enter should create a new line in insert mode",function(){s("Fooba[r]"),n.setInsertMode(),n.interpretOneCommand("Enter"),d("Fooba|[r]")}),t("w moves cursor to next word's first character","[h]ello world!","w","hello [w]orld!"),t("b moves cursor backwards, to the beginning of a word","hello wo[r]ld","b","hello [w]orld"),t("b moves cursor backwards, to the beginning of the previous word","hello [w]orld","b","[h]ello world"),t("e moves cursor forward, to the end of a word","he[l]lo world","e","hell[o] world"),t("e moves cursor forward, to the end of the next word","hell[o] world","e","hello worl[d]"),r("i sets insert mode",function(){c("i"),l("insert mode",n.isInsertMode())}),r("i does not change text when in command mode",function(){var e="bl[a]h";i(e,"i",e)}),r("key press writes text in insert mode",function(){n.setInsertMode(),i("ab[c]","t","abt[c]")}),r("Insert at the beginning of a line",function(){s("Not this|Foobar is [r]."),c("I"),d("Not this|[F]oobar is r."),l("Insert mode",n.isInsertMode())}),r("x removes character under cursor",function(){i("foo[b]ar","x","foo[a]r"),i("fooba[r]","x","foob[a]"),i("[ ]","x","[ ]")}),t("h moves cursor one character to left","foo[b]ar","h","fo[o]bar"),t("l moves cursor one character to right","foo[b]ar","l","foob[a]r"),t("2l moves cursor two (2) characters to right","foo[b]ar","2l","fooba[r]"),t("if l movement is greater than area in which it can move, stop","foo[b]ar","3l","fooba[r]"),t("delete starting from cursor, maximum of 2 words, to the right","first foo[b]ar barfoo last","d2e","first foo[ ]last"),t("Find next given character","f[i]nd the char4cter","f4","find the char[4]cter"),r("find backwards with F",function(){s("find the ch4racter, backwar[d]s"),c("F"),c("4"),d("find the ch[4]racter, backwards")}),t("Replace character under cursor","h[e]llo","ra","h[a]llo"),t("Delete starting from cursor (but exclude), max two words, to the left","foo bar z[i]p zap","d2b","foo [i]p zap"),t("Go to the start of line.","This is a se[n]tence.","0","[T]his is a sentence."),t("Go to the end of line","This [i]s a sentence.","$","This is a sentence[.]"),t("Delete current line","First line|Second [l]ine|Third line","dd","First line|[T]hird line"),t("Go to the start of buffer","First line|Second [l]ine","gg","[F]irst line|Second line"),r("Go to the end of buffer",function(){s("First li[n]e|Second line"),c("G"),d("First line|Second lin[e]")}),t("Change inside word","Hello, D[o]rian Gray!","ciwMaster","Hello, Master[ ]Gray!"),t("Change inside parentheses","Hello, (cr[i]es) it is a nice day!","ci(smiles","Hello, (smiles[)] it is a nice day!"),t("Repeat command: w","Fo[o] bar cue","w.","Foo bar [c]ue"),t("Repeat command: f","F[o]o bar cue all","fa.","Foo bar cue [a]ll"),t("Repeat command: dd","First|Sec[o]nd|Third","dd.","Firs[t]"),r("Insert after cursor, stay in insert mode",function(){s("F[o]o is bar"),c("a"),d("Fo[o] is bar"),l("Insert mode",n.isInsertMode())}),r("Insert after cursor, back to command mode",function(){s("F[o]o is bar"),c("a"),l("Insert mode",n.isInsertMode()),a("t"),c("Esc"),l("Insert mode",n.isCommandMode()),d("Fo[t]o is bar")}),r("Ready to append to line",function(){s("F[o]o is bar"),c("A"),d("Foo is bar[ ]")}),r("Append to line",function(){s("F[o]o is bar"),c("A"),a("ista"),d("Foo is barista[ ]")}),r("Append to line, last space is removed",function(){s("F[o]o is bar"),c("A"),a("ista"),c("Esc"),d("Foo is barist[a]")}),r("Join two lines",function(){s("Fl[o]oba|Bar"),c("J"),d("Flooba[ ]Bar")}),r("Yank current line and paste it below",function(){s("Foo[b]ar|Another"),a("yy"),a("p"),d("Foobar|[F]oobar|Another")}),r("Yank current line and paste it twice below",function(){s("Foo[b]ar|Another"),a("yy"),a("pp"),d("Foobar|Foobar|[F]oobar|Another")}),r("Search next occurrence of a word under cursor",function(){s("Here is a wo[r]d that is searched word is."),c("*"),d("Here is a word that is searched [w]ord is.")}),r("Searching a next word starts from beginning of buffer if not found at the end",function(){s("A rabbit goes down a rabb[i]t hole."),c("*"),d("A [r]abbit goes down a rabbit hole.")}),r("Searching a next word goes right",function(){s("A rabbit goes rabbit down a rabb[i]t hole."),c("*"),d("A [r]abbit goes rabbit down a rabbit hole.")}),r("Search previous occurrence of a word under cursor",function(){s("Here is a word that is searched w[o]rd is."),c("#"),d("Here is a [w]ord that is searched word is.")}),r("Searching a previous word starts from end of buffer if not found at the start",function(){s("A rabb[i]t goes down a rabbit hole."),c("#"),d("A rabbit goes down a [r]abbit hole.")}),r("Searching a previous word goes left",function(){s("A rabb[i]t goes down rabbit a rabbit hole."),c("#"),d("A rabbit goes down rabbit a [r]abbit hole.")})}