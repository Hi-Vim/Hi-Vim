function create_VIM_TESTENGINE(e,t,n,r){function s(e){return E.reduce("",e,function(e,t){return 160===E.charToInt(t)?e+" ":e+t})}function i(t,n,r){c(t),o(n),e.interpretSequence(n),f(r)}function o(e){var t=E.isPrimitiveArray(e)?e.join(""):e;v(t,"test_keypress","[key presses]","test_generic_message")}function a(e,t,n){for(var r=0,s=0;;){if(s=t.indexOf(e,s+1),s===-1||s>=n)return r;r+=1}}function c(e){v(e,"test_initial","[initial]","test_generic_message"),u(e);var n=e.indexOf("["),r=1+n,s=a("|",e,r),i=e.replace(/\[/g,"").replace(/\]/g,"");i=i.replace(/\|/g,t.lineBreakMarker),C.initializeWithText(i),C.changeCursorToIndex(r-1-s)}function u(e){var t=e.indexOf("[");if(t===-1)throw"Cursor start marker [ has not been set. Use [ and ] to wrap one and only one character of the setup text.";if(e.indexOf("[",t+1)>=0)throw"Only one [ (cursor start) can be setup.";var n=e.indexOf("]");if(n===-1)throw"Cursor end marker ] has not been set. Use [ and ] to wrap one and only one character of the setup text.";if(t+2!==n)throw"Cursor start marker [ and cursor end marker ] are not correctly setup. There must be only one character between them. Like foo[b]ar.";if(e.indexOf("]",n+1)>=0)throw"Only one ] (cursor end) can be setup."}function f(e){var n=s(e),r=s(t.documentAsTextWithCursorAndLineBreak("|"));v(n,"test_expected","[expected]","test_generic_message"),v(r,"test_result","[result]","test_generic_message"),n!==r?d():l()}function d(){y("Test failed.","","failed"),S++}function l(){y("Test succeeded.","","succeeded"),b++}function p(t){o(t),e.interpretOneCommand(t)}function g(t){o(t),e.interpretSequence(t)}function m(){function e(){var s=t.pop();try{h(s,n)}catch(e){d(),w("exception",e),v(e.name,"failed","exception name","test_generic_message"),v(e.message,"failed","exception message","test_generic_message"),_()}n+=1,t.length>0?t.length%3===0?setTimeout(e,r):e():I.showEndResult()}if(0===V.length)y("No tests registered!");else{var t=E.reverse(V),n=1;e()}}function h(e,t){I.logStartUnit(),y(t+". "+e.description,"","test_description"),x(),e.testFun(),_()}function _(){I.updateValues(b,S),I.updateStatisticsView(),I.logEndUnit()}function x(){O.setCommandMode(),C.initializeEmptyText()}function T(e,t){t!==!0?y("assert failed for: ",e,"failed"):y("assert was ok for: ",e,"succeeded")}function v(e,t,n,r){I.log2(e,t,n,r)}function y(e,t,n){I.log(e,t,n)}function k(e,t){w("registering test",e),V.push({description:e,testFun:t})}function w(e,t){"undefined"!=typeof console&&(void 0===t?console.log(e):console.log(e,t))}var E=VIM_GENERIC,O=e.environment,C=e.environment.executor,I=create_VIM_TESTVIEW(n),b=0,S=0,V=[];return{runTests:m,registerTest:k,test:i,assertThat:T,shouldBe:f,setup:c,interpretOneCommand:p,interpretSequence:g}}